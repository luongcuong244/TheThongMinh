package thethongminh.user;

import com.github.lgooddatepicker.components.DatePickerSettings;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.smartcardio.ResponseAPDU;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import thethongminh.utils.CardManager;
import thethongminh.utils.ImageUtils;
import java.util.Locale;
import javax.smartcardio.CardException;
import thethongminh.database.DataConnection;
import thethongminh.model.Card;
import thethongminh.model.Constants;
import thethongminh.model.User;
import thethongminh.utils.CardUtils;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author LENOVO
 */
public class Login extends javax.swing.JFrame {
    
    public static BufferedImage image;
    CardManager cardManager;
    private static ResponseAPDU response;

    /**
     * Creates new form Admin
     */
    public Login() {
        initComponents();
        
        setLocationRelativeTo(null);
        cardManager = CardManager.getInstance();
        
        jPanelAvatar.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Khi người dùng nhấp chuột, mở cửa sổ chọn file
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn một hình ảnh");

                // Chỉ lọc các file hình ảnh (JPG, PNG, GIF)
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "png", "gif");
                fileChooser.setFileFilter(filter);

                // Mở cửa sổ chọn file
                int returnValue = fileChooser.showOpenDialog(null);
                if (returnValue == JFileChooser.APPROVE_OPTION) {
                    try {
                        // Lấy file hình ảnh người dùng chọn
                        File selectedFile = fileChooser.getSelectedFile();

                        // Load the image from a file (replace with your image path)
                        BufferedImage originalImage = ImageIO.read(selectedFile);

                        // Resize the image to a new width and height
                        int newWidth = 140; // Set desired width
                        int newHeight = 140; // Set desired height
                        BufferedImage resizedImage = ImageUtils.resizeImage(originalImage, newWidth, newHeight);
                        jLabel7.setIcon(new ImageIcon(resizedImage));
                        image = resizedImage;
                    } catch (IOException ex) {
                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtName = new thethongminh.view.HintTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        edtAddress = new thethongminh.view.HintTextField();
        jLabel5 = new javax.swing.JLabel();
        edtPhoneNumber = new thethongminh.view.HintTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanelAvatar = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnInitUserData = new javax.swing.JButton();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnLockCard = new javax.swing.JButton();
        btnUnlockCard = new javax.swing.JButton();
        btnResetCard = new javax.swing.JButton();
        btnConfirmPin = new javax.swing.JButton();
        edtPin = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 204, 255));
        setBounds(new java.awt.Rectangle(50, 50, 0, 0));
        setForeground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(234, 246, 252));

        jPanel1.setBackground(new java.awt.Color(234, 246, 252));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Khởi tạo dữ liệu người dùng"));

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Họ và tên");

        edtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(224, 224, 224)));
        edtName.setHint("Nhập tên người dùng");

        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Ngày sinh");

        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Địa chỉ");

        edtAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(224, 224, 224)));
        edtAddress.setHint("Nhập địa chỉ");

        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Số điện thoại");

        edtPhoneNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(224, 224, 224)));
        edtPhoneNumber.setHint("Nhập số điện thoại");

        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Ảnh người dùng");

        jPanel3.setBackground(new java.awt.Color(234, 246, 252));

        jPanelAvatar.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAvatar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(224, 224, 224)));

        javax.swing.GroupLayout jPanelAvatarLayout = new javax.swing.GroupLayout(jPanelAvatar);
        jPanelAvatar.setLayout(jPanelAvatarLayout);
        jPanelAvatarLayout.setHorizontalGroup(
            jPanelAvatarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        jPanelAvatarLayout.setVerticalGroup(
            jPanelAvatarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanelAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnInitUserData.setBackground(new java.awt.Color(204, 255, 255));
        btnInitUserData.setText("Khởi tạo");
        btnInitUserData.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnInitUserData.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnInitUserData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitUserDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(edtPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(edtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(edtName, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(datePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(39, 39, 39))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(299, Short.MAX_VALUE)
                    .addComponent(btnInitUserData)
                    .addGap(295, 295, 295)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(edtName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(99, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(321, Short.MAX_VALUE)
                    .addComponent(btnInitUserData, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(21, 21, 21)))
        );

        DatePickerSettings settings = new DatePickerSettings(new Locale("vi"));
        settings.setFormatForDatesCommonEra("d-M-yyyy"); // Định dạng ngày tháng năm
        settings.setAllowKeyboardEditing(false); // Không cho phép nhập tay

        datePicker1.setSettings(settings);

        jPanel5.setBackground(new java.awt.Color(234, 246, 252));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Mã pin"));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setText("Nhập mã pin");

        jPanel6.setBackground(new java.awt.Color(234, 246, 252));

        btnLockCard.setBackground(new java.awt.Color(255, 153, 153));
        btnLockCard.setText("Khoá thẻ");
        btnLockCard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLockCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLockCardActionPerformed(evt);
            }
        });

        btnUnlockCard.setBackground(new java.awt.Color(153, 255, 153));
        btnUnlockCard.setText("Mở thẻ");
        btnUnlockCard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUnlockCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnlockCardActionPerformed(evt);
            }
        });

        btnResetCard.setBackground(new java.awt.Color(255, 255, 153));
        btnResetCard.setText("Reset thẻ");
        btnResetCard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnResetCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnUnlockCard, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnLockCard, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnResetCard, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLockCard, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUnlockCard, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetCard, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnConfirmPin.setBackground(new java.awt.Color(204, 204, 255));
        btnConfirmPin.setText("Xác nhận");
        btnConfirmPin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnConfirmPin.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnConfirmPin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmPinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirmPin)
                .addGap(115, 115, 115))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(edtPin, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edtPin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmPin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLockCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLockCardActionPerformed
        JOptionPane.showMessageDialog(null,
                "Khoá thẻ thành công!",
                "Thông báo",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnLockCardActionPerformed

    private void btnInitUserDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitUserDataActionPerformed
        String name = edtName.getText().trim();
        String dateOfBirth = datePicker1.getText();
        String address = edtAddress.getText().trim();
        String phoneNumber = edtPhoneNumber.getText().trim();
        
        System.out.println("name" + name);
        System.out.println("dateOfBirth" + dateOfBirth);
        System.out.println("address" + address);
        System.out.println("phoneNumber" + phoneNumber);
        System.out.println("imge: " + image);
        
        DataConnection.addUser(new User(name, dateOfBirth, address, phoneNumber, image));
        
        if (name.isEmpty() || dateOfBirth.isEmpty() || address.isEmpty() || phoneNumber.isEmpty() || image == null) {
            JOptionPane.showMessageDialog(null,
                    "Vui lòng nhập đủ dữ liệu!",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (!phoneNumber.matches("^0\\d{9}$")) {
            JOptionPane.showMessageDialog(null,
                    "Số điện thoại không hợp lệ. Vui lòng kiểm tra lại.\n Định dạng 0xxx - 10 số",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            
            return;
        }
        
        try {
            
            byte[] nameByte = CardUtils.convertStringUTF8ToBytes(name);
            byte[] dateOfBirthByte = CardUtils.convertStringUTF8ToBytes(dateOfBirth);
            byte[] addressByte = CardUtils.convertStringUTF8ToBytes(address);
            byte[] phoneByte = CardUtils.convertStringUTF8ToBytes(phoneNumber);
            byte[] imageByte = ImageUtils.bufferedImageToByteArray(image);
            
            long timestamp = System.currentTimeMillis();
            byte[] cardID = CardUtils.convertStringUTF8ToBytes(String.valueOf(timestamp));
            
            byte[] data = CardUtils.createData(
                    cardID,
                    new byte[]{Constants.SEPARATOR},
                    nameByte,
                    new byte[]{Constants.SEPARATOR},
                    dateOfBirthByte,
                    new byte[]{Constants.SEPARATOR},
                    addressByte,
                    new byte[]{Constants.SEPARATOR},
                    phoneByte,
                    new byte[]{Constants.SEPARATOR},
                    imageByte
            );
            
            response = cardManager.sendApduCommand(Constants.CLA, Constants.INS_ENTER, Constants.PARAM_DEFAULT, Constants.PARAM_DEFAULT, data);
            int sw = response.getSW();
            System.out.println("sw INS_ENTER res: " + CardUtils.convertSWToHex(sw));
            String publicKey = CardUtils.converBytesToHex(response.getData());
            System.out.println("data INS_ENTER res: " + publicKey);
            switch (sw) {
                case Constants.SW_SUCCESS:
                    int userId = DataConnection.addUser(new User(name, dateOfBirth, address, phoneNumber, image));
                    if (userId != 0) {
                        DataConnection.addCard(userId, CardUtils.convertBytesToStringUTF8(cardID), publicKey);
                    }
                    
                    JOptionPane.showMessageDialog(null,
                            "Khởi tạo dữ liệu thành công!",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    
                    break;
                case Constants.SW_DATA_INVALID:
                    JOptionPane.showMessageDialog(null,
                            "Sai định dạng dữ liệu!",
                            "Thông báo",
                            JOptionPane.ERROR_MESSAGE);
                    break;
                case Constants.SW_WRONG_LENGTH:
                    JOptionPane.showMessageDialog(null,
                            "Sai độ dài dữ liệu!",
                            "Thông báo",
                            JOptionPane.ERROR_MESSAGE);
                    break;
                default:
                    System.out.println("Unknown res SW");
                    break;
            }
            
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (CardException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnInitUserDataActionPerformed

    private void btnUnlockCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnlockCardActionPerformed
        try {
            response = cardManager.sendApduCommand(Constants.CLA, Constants.INS_UNBLOCK_PIN, Constants.PARAM_DEFAULT, Constants.PARAM_DEFAULT, null);
            int sw = response.getSW();
            System.out.println("sw UNBLOCK_PIN res: " + CardUtils.convertSWToHex(sw));
            System.out.println("data UNBLOCK_PIN res: " + CardUtils.converBytesToHex(response.getData()));
            
            switch (sw) {
                case Constants.SW_SUCCESS:
                    JOptionPane.showMessageDialog(null,
                            "Mở khoá thẻ thành công!",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;
                default:
                    System.out.println("Unknown res SW");
                    break;
            }
        } catch (CardException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUnlockCardActionPerformed

    private void btnResetCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCardActionPerformed
        JOptionPane.showMessageDialog(null,
                "Reset thẻ thành công!",
                "Thông báo",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnResetCardActionPerformed

    private void btnConfirmPinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmPinActionPerformed
        char[] enteredPin = edtPin.getPassword();
        String pin = new String(enteredPin).trim();
        System.out.println("pin: " + pin);
        int pinLength = pin.length();
        
        System.out.println("pinLength: " + pinLength);
        
        if (pin.isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "Mã pin không được để trống!",
                    "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (pinLength != 6) {
            JOptionPane.showMessageDialog(null,
                    "Mã PIN phải có đúng 6 chữ số!",
                    "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!pin.matches("\\d{6}")) {
            JOptionPane.showMessageDialog(null,
                    "Mã PIN chỉ được chứa các chữ số từ 0 đến 9!",
                    "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            response = cardManager.sendApduCommand(Constants.CLA, Constants.INS_VERIFY_PIN, Constants.PARAM_DEFAULT, Constants.PARAM_DEFAULT, CardUtils.convertPinToByte(pin));
            
            int sw = response.getSW();
            byte[] resData = response.getData();
            System.out.println("sw VERIFY_PIN res: " + CardUtils.convertSWToHex(sw));
            System.out.println("data VERIFY_PIN res: " + CardUtils.converBytesToHex(response.getData()));
            
            int numberOfRetries;
            switch (sw) {
                case Constants.SW_INVALID_PIN_LENGTH:
                    
                    numberOfRetries = CardUtils.covertBytesToInt(resData);
                    System.out.println("sw numberOfRetries res: " + numberOfRetries);
                    JOptionPane.showMessageDialog(null,
                            "Độ dài PIN không chính xác!\nCòn " + numberOfRetries + " lần nhập!",
                            "Thông báo",
                            JOptionPane.ERROR_MESSAGE);
                    break;
                case Constants.SW_VERIFICATION_FAILED:
                    
                    numberOfRetries = CardUtils.covertBytesToInt(resData);
                    System.out.println("sw numberOfRetries res: " + numberOfRetries);
                    JOptionPane.showMessageDialog(null,
                            "Mã PIN không chính xác!\nCòn " + numberOfRetries + " lần nhập!",
                            "Thông báo",
                            JOptionPane.ERROR_MESSAGE);
                    break;
                case Constants.SW_PIN_BLOCKED:
                    JOptionPane.showMessageDialog(null,
                            "Thẻ đã bị khóa",
                            "Thông báo",
                            JOptionPane.ERROR_MESSAGE);
                    break;
                case Constants.SW_PIN_VALIDATED:
                    JOptionPane.showMessageDialog(null,
                            "Mã PIN chính xác!\nĐăng nhập thành công",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                   
                    this.setVisible(false);
                    new Home().setVisible(true);
                    break;
                
                default:
                    System.out.println("Unknown res SW");
//                    this.setVisible(false);
//                    new Home().setVisible(true);
                    break;
            }
            
        } catch (CardException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnConfirmPinActionPerformed
    
    public void resetNumberOfRetries() {
        
        try {
            response = cardManager.sendApduCommand(Constants.CLA, Constants.INS_RESET_PIN, Constants.PARAM_DEFAULT, Constants.PARAM_DEFAULT, null);
            int sw = response.getSW();
            System.out.println("sw RESET_PIN res: " + CardUtils.convertSWToHex(sw));
            System.out.println("data RESET_PIN res: " + CardUtils.converBytesToHex(response.getData()));
        } catch (CardException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmPin;
    private javax.swing.JButton btnInitUserData;
    private javax.swing.JButton btnLockCard;
    private javax.swing.JButton btnResetCard;
    private javax.swing.JButton btnUnlockCard;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private thethongminh.view.HintTextField edtAddress;
    private thethongminh.view.HintTextField edtName;
    private thethongminh.view.HintTextField edtPhoneNumber;
    private javax.swing.JPasswordField edtPin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelAvatar;
    // End of variables declaration//GEN-END:variables
}
